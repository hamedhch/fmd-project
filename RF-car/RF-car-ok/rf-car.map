GNU Tool Chain  

Linker command line:

--edf=C:\Program Files (x86)\CCompiler\Compiler\data\dat\en_msgs.txt -cs \
  -h+rf-car.sym --cmf=rf-car.cmf -z -QFT60F01X \
  -oC:\Users\hamed\AppData\Local\Temp\s91s.2 -Mrf-car.map -E1 -ver=XC8 \
  -ASTACK=06Ch-06fh -pstack=STACK -ACODE=00h-03FFh -ASTRCODE=00h-03FFh \
  -ASTRING=00h-0FFhx4 -ACONST=00h-0FFhx4 -AENTRY=00h-0FFhx4 \
  -ACOMMON=070h-07Fh -ABANK0=040h-06Fh -ARAM=040h-06Fh -AABS1=040h-07Fh \
  -ASFR0=00h-03Fh -ASFR1=080h-0EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\hamed\AppData\Local\Temp\s91s.obj rf-car.obj 

Object code version is 3.11

Machine type is FT60F01X



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\hamed\AppData\Local\Temp\s91s.obj
                end_init                              D        D        1        8       0
                reset_vec                             0        0        1        0       0
rf-car.obj      cinit                                 E        E        A        8       0
                intentry                              4        4        9        8       0
                text12                              2FF      2FF        A        8       0
                text11                              23B      23B       3E        8       0
                text10                              295      295       1C        8       0
                text9                               2C6      2C6       13        8       0
                text8                                18       18      1B6        8       0
                text7                               2F4      2F4        B        8       0
                text6                               279      279       1C        8       0
                text5                               31A      31A        8        8       0
                text4                               2B1      2B1       15        8       0
                text3                               2D9      2D9        F        8       0
                text2                               309      309        9        8       0
                text1                               2E8      2E8        C        8       0
                maintext                            1CE      1CE       6D        8       0
                cstackBANK0                          5E       5E        E       40       1
                cstackCOMMON                         70       70        B       70       1
                clrtext                             312      312        8        8       0
                bssBANK0                             40       40       1E       40       1
                bssCOMMON                            7C       7C        2       70       1
                bitbssCOMMON                        3D8       7B        4       70       1     8

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              D        D        1         0
                cinit                                 E        E        A         0
                intentry                              4        4        9         0
                reset_vec                             0        0        1         0
                text12                              2FF      2FF        A         0
                text11                              23B      23B       3E         0
                text10                              295      295       1C         0
                text9                               2C6      2C6       13         0
                text8                                18       18      1B6         0
                text7                               2F4      2F4        B         0
                text6                               279      279       1C         0
                text5                               31A      31A        8         0
                text4                               2B1      2B1       15         0
                text3                               2D9      2D9        F         0
                text2                               309      309        9         0
                text1                               2E8      2E8        C         0
                maintext                            1CE      1CE       6D         0
                clrtext                             312      312        8         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        B         1
                bssCOMMON                            7C       7C        2         1
                bitbssCOMMON                        3D8       7B        4         1

        CLASS   BANK0          
                cstackBANK0                          5E       5E        E         1
                bssBANK0                             40       40       1E         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK1          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  00031E  000322         8       0  CODE        2
                bssBANK0                       000040  00002C  00006C        40       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            06C-06F             4           1
        CODE             001-003             3           2
                         322-3FF            DE
        CONFIG           2007-2007             1           2
        CONST            001-003             3           2
                         322-3FF            DE
        EEDATA           2100-21FF           100           2
        ENTRY            001-003             3           2
                         322-3FF            DE
        IDLOC            2000-2003             4           2
        RAM              06C-06F             4           1
        SFR0             000-03F            40           1
        SFR1             080-0EF            70           1
        STACK            06C-06F             4           1
        STRCODE          001-003             3           2
                         322-3FF            DE
        STRING           001-003             3           2
                         322-3FF            DE

                                  Symbol Table

DelayMs@Time             cstackBANK0  064
DelayMs@a                cstackBANK0  066
DelayMs@b                cstackBANK0  068
DelayUs@Time             cstackBANK0  062
DelayUs@a                cstackBANK0  063
EEPROMread@EEAddr        cstackBANK0  062
EEPROMread@ReEEPROMread  cstackBANK0  063
EEPROMwrite@Data         cstackBANK0  062
EEPROMwrite@EEAddr       cstackBANK0  063
PL10                     text8        1C8
PL12                     maintext     230
PL14                     maintext     236
PL2                      text8        1AB
PL4                      text8        1B6
PL6                      text8        1BC
PL8                      text8        1C2
SEND_CODE@Code1          cstackCOMMON 07A
SEND_CODE@Code2          cstackCOMMON 078
SEND_CODE@Code3          cstackCOMMON 079
SEND_DATA@Byte           cstackCOMMON 074
SEND_DATA@Code           cstackCOMMON 073
SEND_DATA@i              cstackCOMMON 075
_Bit                     bssBANK0     058
_Buffer                  bssBANK0     059
_Count                   bssBANK0     05A
_Data                    bssBANK0     052
_DataM                   bssBANK0     04F
_DataS                   bssBANK0     040
_DelayMs                 text6        279
_DelayUs                 text7        2F4
_EEADR                   (abs)        09B
_EECON1                  (abs)        09C
_EEDAT                   (abs)        09A
_EEIF                    (abs)        067
_EEPROMread              text5        31A
_EEPROMwrite             text4        2B1
_Finish                  bitbssCOMMON 3D9
_Frist                   bitbssCOMMON 3DB
_GIE                     (abs)        05F
_INTCON                  (abs)        00B
_ISR                     text8        018
_Learn                   bitbssCOMMON 3DA
_Lock                    bitbssCOMMON 3D8
_MSCKCON                 (abs)        01B
_OPTION                  (abs)        081
_OSCCON                  (abs)        08F
_PA1                     (abs)        029
_PA2                     (abs)        02A
_PA4                     (abs)        02C
_PA5                     (abs)        02D
_PEIE                    (abs)        05E
_PORTA                   (abs)        005
_POWER_INITIAL           text3        2D9
_PR2                     (abs)        092
_RD                      (abs)        4E0
_RFData                  bssBANK0     04C
_SEND_CODE               text9        2C6
_SEND_DATA               text11       23B
_Start                   bssBANK0     05B
_T0IE                    (abs)        05D
_T0IF                    (abs)        05A
_T2CON                   (abs)        012
_TIMER0_INITIAL          text2        309
_TIMER2_INITIAL          text1        2E8
_TMR0                    (abs)        001
_TMR2                    (abs)        011
_TMR2IE                  (abs)        461
_TMR2IF                  (abs)        061
_TMR2ON                  (abs)        092
_TRISA                   (abs)        085
_Time                    bssBANK0     05D
_Timer                   bssBANK0     055
_WPUA                    (abs)        095
_WR                      (abs)        4E8
__Habs1                  abs1         000
__Hbank0                 bank0        000
__Hbank1                 bank1        000
__HbitbssCOMMON          bitbssCOMMON 000
__HbssBANK0              bssBANK0     000
__HbssCOMMON             bssCOMMON    000
__Hcinit                 cinit        018
__Hclrtext               clrtext      000
__Hcode                  code         000
__Hcommon                common       000
__Hconfig                config       000
__HcstackBANK0           cstackBANK0  000
__HcstackCOMMON          cstackCOMMON 000
__Heeprom_data           eeprom_data  000
__Hend_init              end_init     00E
__Hfunctab               functab      000
__Hidloc                 idloc        000
__Hinit                  init         00D
__Hintentry              intentry     00D
__Hmaintext              maintext     000
__Hpa_nodes0             pa_nodes0    000
__Hpowerup               powerup      000
__Hram                   ram          000
__Hreset_vec             reset_vec    001
__Hsfr0                  sfr0         000
__Hsfr1                  sfr1         000
__Hspace_0               (abs)        322
__Hspace_1               (abs)        3DC
__Hspace_2               (abs)        000
__Hspace_3               (abs)        000
__Hstack                 stack        000
__Hstrings               strings      000
__Htext                  text         000
__Labs1                  abs1         000
__Lbank0                 bank0        000
__Lbank1                 bank1        000
__LbitbssCOMMON          bitbssCOMMON 000
__LbssBANK0              bssBANK0     000
__LbssCOMMON             bssCOMMON    000
__Lcinit                 cinit        00E
__Lclrtext               clrtext      000
__Lcode                  code         000
__Lcommon                common       000
__Lconfig                config       000
__LcstackBANK0           cstackBANK0  000
__LcstackCOMMON          cstackCOMMON 000
__Leeprom_data           eeprom_data  000
__Lend_init              end_init     00D
__Lfunctab               functab      000
__Lidloc                 idloc        000
__Linit                  init         00D
__Lintentry              intentry     004
__Lmaintext              maintext     000
__Lpa_nodes0             pa_nodes0    000
__Lpowerup               powerup      000
__Lram                   ram          000
__Lreset_vec             reset_vec    000
__Lsfr0                  sfr0         000
__Lsfr1                  sfr1         000
__Lspace_0               (abs)        000
__Lspace_1               (abs)        000
__Lspace_2               (abs)        000
__Lspace_3               (abs)        000
__Lstack                 stack        000
__Lstrings               strings      000
__Ltext                  text         000
__S0                     (abs)        322
__S1                     (abs)        07E
__S2                     (abs)        000
__S3                     (abs)        000
___int_sp                stack        000
___latbits               (abs)        000
___sp                    stack        000
__end_ofPL10             text8        1CE
__end_ofPL12             maintext     236
__end_ofPL14             maintext     23B
__end_ofPL2              text8        1B6
__end_ofPL4              text8        1BC
__end_ofPL6              text8        1C2
__end_ofPL8              text8        1C8
__end_of_DelayMs         text6        295
__end_of_DelayUs         text7        2FF
__end_of_EEPROMread      text5        322
__end_of_EEPROMwrite     text4        2C6
__end_of_ISR             text8        1AB
__end_of_POWER_INITIAL   text3        2E8
__end_of_SEND_CODE       text9        2D9
__end_of_SEND_DATA       text11       279
__end_of_TIMER0_INITIAL  text2        312
__end_of_TIMER2_INITIAL  text1        2F4
__end_of__initialization cinit        016
__end_of_main            maintext     230
__end_ofi1_DelayMs       text10       2B1
__end_ofi1_DelayUs       text12       309
__initialization         cinit        00E
__pbitbssCOMMON          bitbssCOMMON 3D8
__pbssBANK0              bssBANK0     040
__pbssCOMMON             bssCOMMON    07C
__pcstackBANK0           cstackBANK0  05E
__pcstackCOMMON          cstackCOMMON 070
__pintentry              intentry     004
__pmaintext              maintext     1CE
__ptext0                 text0        000
__ptext1                 text1        2E8
__ptext10                text10       295
__ptext11                text11       23B
__ptext12                text12       2FF
__ptext2                 text2        309
__ptext3                 text3        2D9
__ptext4                 text4        2B1
__ptext5                 text5        31A
__ptext6                 text6        279
__ptext7                 text7        2F4
__ptext8                 text8        018
__ptext9                 text9        2C6
__size_of_DelayMs        (abs)        000
__size_of_DelayUs        (abs)        000
__size_of_EEPROMread     (abs)        000
__size_of_EEPROMwrite    (abs)        000
__size_of_ISR            (abs)        000
__size_of_POWER_INITIAL  (abs)        000
__size_of_SEND_CODE      (abs)        000
__size_of_SEND_DATA      (abs)        000
__size_of_TIMER0_INITIAL (abs)        000
__size_of_TIMER2_INITIAL (abs)        000
__size_of_main           (abs)        000
__size_ofi1_DelayMs      (abs)        000
__size_ofi1_DelayUs      (abs)        000
_conterout               bssCOMMON    07C
_contlern                bssBANK0     05C
_key                     bssBANK0     057
_main                    maintext     1CE
btemp                    (abs)        07E
clear_ram0               clrtext      312
end_of_initialization    cinit        016
i1DelayMs@Time           cstackCOMMON 072
i1DelayMs@a              cstackCOMMON 074
i1DelayMs@b              cstackCOMMON 076
i1DelayUs@Time           cstackCOMMON 070
i1DelayUs@a              cstackCOMMON 071
i1_DelayMs               text10       295
i1_DelayUs               text12       2FF
interrupt_function       intentry     004
intlevel0                functab      000
intlevel1                functab      000
intlevel2                functab      000
intlevel3                functab      000
intlevel4                functab      000
intlevel5                functab      000
main@i                   cstackBANK0  06B
reset_vec                reset_vec    000
saved_w                  (abs)        07E
stackhi                  (abs)        000
stacklo                  (abs)        000
start                    init         00D
start_initialization     cinit        00E
wtemp0                   (abs)        07E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 248 in file "RF-car.C"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       1
      Temps:          0       1
      Totals:         0       2
Total ram usage:        2 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_DelayMs
		_EEPROMread
		_EEPROMwrite
		_POWER_INITIAL
		_TIMER0_INITIAL
		_TIMER2_INITIAL
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _TIMER2_INITIAL *****************
 Defined at:
		line 338 in file "RF-car.C"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TIMER0_INITIAL *****************
 Defined at:
		line 351 in file "RF-car.C"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _POWER_INITIAL *****************
 Defined at:
		line 323 in file "RF-car.C"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _EEPROMwrite *****************
 Defined at:
		line 374 in file "RF-car.C"
 Parameters:    Size  Location     Type
  EEAddr          1    wreg     unsigned char 
  Data            1    4[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  EEAddr          1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       1
      Locals:         0       1
      Temps:          0       0
      Totals:         0       2
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _EEPROMread *****************
 Defined at:
		line 364 in file "RF-car.C"
 Parameters:    Size  Location     Type
  EEAddr          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  EEAddr          1    4[BANK0 ] unsigned char 
  ReEEPROMread    1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       2
      Temps:          0       0
      Totals:         0       2
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DelayMs *****************
 Defined at:
		line 397 in file "RF-car.C"
 Parameters:    Size  Location     Type
  Time            2    6[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  b               2   10[BANK0 ] unsigned int 
  a               2    8[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       2
      Locals:         0       4
      Temps:          0       0
      Totals:         0       6
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_DelayUs
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DelayUs *****************
 Defined at:
		line 387 in file "RF-car.C"
 Parameters:    Size  Location     Type
  Time            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Time            1    4[BANK0 ] unsigned char 
  a               1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       2
      Temps:          0       0
      Totals:         0       2
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_DelayMs
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 54 in file "RF-car.C"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       4
      Totals:         0       4
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_SEND_CODE
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _SEND_CODE *****************
 Defined at:
		line 447 in file "RF-car.C"
 Parameters:    Size  Location     Type
  Code1           1    wreg     unsigned char 
  Code2           1    8[COMMON] unsigned char 
  Code3           1    9[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  Code1           1   10[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         2       0
      Locals:         1       0
      Temps:          0       0
      Totals:         3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_SEND_DATA
		i1_DelayMs
		i1_DelayUs
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_DelayMs *****************
 Defined at:
		line 397 in file "RF-car.C"
 Parameters:    Size  Location     Type
  Time            2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  DelayMs         2    6[COMMON] unsigned int 
  DelayMs         2    4[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         2       0
      Locals:         4       0
      Temps:          0       0
      Totals:         6       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_DelayUs
 This function is called by:
		_SEND_CODE
 This function uses a non-reentrant model


 *************** function _SEND_DATA *****************
 Defined at:
		line 410 in file "RF-car.C"
 Parameters:    Size  Location     Type
  Code            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Code            1    3[COMMON] unsigned char 
  i               1    5[COMMON] unsigned char 
  Byte            1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         3       0
      Temps:          1       0
      Totals:         4       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_DelayUs
 This function is called by:
		_SEND_CODE
 This function uses a non-reentrant model


 *************** function i1_DelayUs *****************
 Defined at:
		line 387 in file "RF-car.C"
 Parameters:    Size  Location     Type
  Time            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Time            1    0[COMMON] unsigned char 
  DelayUs         1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         2       0
      Temps:          0       0
      Totals:         2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SEND_DATA
		_SEND_CODE
		i1_DelayMs
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
RF-car.C
		_SEND_DATA     		CODE           	023B	0000	63
		_DelayUs       		CODE           	02F4	0000	12
		_ISR           		CODE           	0018	0000	404
		_main          		CODE           	01CE	0000	99
		_EEPROMread    		CODE           	031A	0000	9
		_DelayMs       		CODE           	0279	0000	29
		_SEND_CODE     		CODE           	02C6	0000	20
		_POWER_INITIAL 		CODE           	02D9	0000	16
		_TIMER2_INITIAL		CODE           	02E8	0000	13
		_EEPROMwrite   		CODE           	02B1	0000	22
		_TIMER0_INITIAL		CODE           	0309	0000	10

RF-car.C estimated size: 697

shared
		PL12           		CODE           	0230	0000	7
		PL8            		CODE           	01C2	0000	7
		PL14           		CODE           	0236	0000	6
		i1_DelayMs     		CODE           	0295	0000	29
		i1_DelayUs     		CODE           	02FF	0000	11
		__initialization		CODE           	000E	0000	9
		PL2            		CODE           	01AB	0000	12
		PL10           		CODE           	01C8	0000	7
		PL4            		CODE           	01B6	0000	7
		PL6            		CODE           	01BC	0000	7

shared estimated size: 102

